"""
Django settings for projeto_vagas_emprego project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path

import dotenv

from .utils import EnvironManager

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Loads project .env variables
env = EnvironManager(BASE_DIR, ".env")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.get_var("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.get_var("DEBUG", do_format=bool)

ALLOWED_HOSTS = env.get_var("ALLOWED_HOSTS", do_format=list)

# Application definition

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

THIRD_PARTY_APPS = [
    "rest_framework",
    "rest_framework.authtoken",
    "drf_spectacular",
]

PROJECT_APPS = [
    "accounts",
    "addresses",
    "companies",
    "educations",
    "jobs",
    "skills",
    "documentations",
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + PROJECT_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "projeto_vagas_emprego.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "projeto_vagas_emprego.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# WARNING: remember to set PROJECT_ENV to 'dev' on development and 'prod' on
# production.

DEV_DATABASE = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


PROD_DATABASE = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env.get_var("POSTGRES_DB"),
        "USER": env.get_var("POSTGRES_USER"),
        "PASSWORD": env.get_var("POSTGRES_PASSWORD"),
        "HOST": env.get_var("POSTGRES_HOST"),
        "PORT": env.get_var("POSTGRES_PORT"),
    }
}

DATABASES = (
    DEV_DATABASE if env.get_var("PROJECT_ENV") == "dev" else PROD_DATABASE
)


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


AUTH_USER_MODEL = "accounts.Account"


REST_FRAMEWORK = {
    "EXCEPTION_HANDLER": "projeto_vagas_emprego.utils.exception_handler",
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication"
    ],
    "COERCE_DECIMAL_TO_STRING": False,
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 5,
    "EXCEPTION_HANDLER": "projeto_vagas_emprego.utils.exception_handler",
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",

}


SPECTACULAR_SETTINGS = {
    "TITLE": "Vagas de Emprego",
    "DESCRIPTION": "API backend que simula interação entre usuários, empresas e vagas de emprego.",
    "VERSION": "0.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
}
